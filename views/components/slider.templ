package components

type SliderItem struct {
    Image string
    Alt string
    Title string
    Description string
}

templ Slider(items []SliderItem) {
    @SliderStyle()
    <section class="slider" data-slider>
        <button class="slider__nav slider__nav--prev" aria-label="Предыдущий" data-slider-prev>‹</button>
        <div class="slider__track" data-slider-track>
            for _, it := range items {
                <div class="slider__slide">
                    <img class="slider__image" src={it.Image} alt={it.Alt} />
                    <div class="slider__card">
                        <h3 class="slider__title">{it.Title}</h3>
                        <p class="slider__desc">{it.Description}</p>
                    </div>
                </div>
            }
        </div>
        <button class="slider__nav slider__nav--next" aria-label="Следующий" data-slider-next>›</button>
        <div class="slider__dots" data-slider-dots></div>
    </section>
    @SliderScript()
}

templ SliderStyle() {
    <style>
        .slider { position: relative; width: 100%; margin: 0; overflow: hidden; border-radius: 24px; }
        .slider__track { display: flex; transition: transform 0.4s ease; }
        .slider__slide { min-width: 100%; position: relative; }
        .slider__image { width: 100%; height: 452px; object-fit: cover; display: block; }
        .slider__card { position: absolute; left: 32px; right: 32px; bottom: 28px; background: rgba(255,255,255,0.92); border-radius: 18px; padding: 20px 22px; box-shadow: 0 8px 0 rgba(0,0,0,0.2); backdrop-filter: blur(6px); }
        .slider__title { margin: 0 0 6px; font-weight: 800; font-size: 28px; line-height: 1.2; color: #141414; }
        .slider__desc { margin: 0; font-size: 14px; line-height: 1.45; color: #6b6b6b; }

        .slider__nav { position: absolute; top: 50%; transform: translateY(-50%); z-index: 2; width: 44px; height: 44px; border-radius: 50%; border: none; background: rgba(255,255,255,0.9); box-shadow: 0 4px 12px rgba(0,0,0,0.25); cursor: pointer; font-size: 28px; line-height: 1; }
        .slider__nav--prev { left: 16px; }
        .slider__nav--next { right: 16px; }

        .slider__dots { position: absolute; right: 24px; bottom: 18px; display: flex; gap: 8px; z-index: 3; }
        .slider__dot { width: 8px; height: 8px; border-radius: 50%; background: #d9d9d9; cursor: pointer; }
        .slider__dot.is-active { background: #8a8a8a; }

        @media (max-width: 900px) {
            .slider__image { height: 420px; }
            .slider__card { left: 16px; right: 16px; bottom: 16px; }
        }
    </style>
}

templ SliderScript() {
    <script>
        (function(){
            const root = document.querySelector('[data-slider]');
            if(!root) return;
            const track = root.querySelector('[data-slider-track]');
            const slides = Array.from(track.children);
            const btnPrev = root.querySelector('[data-slider-prev]');
            const btnNext = root.querySelector('[data-slider-next]');
            const dotsWrap = root.querySelector('[data-slider-dots]');
            let index = 0;

            function update(){
                track.style.transform = `translateX(${-index * 100}%)`;
                dotsWrap.querySelectorAll('.slider__dot').forEach((d,i)=>{
                    d.classList.toggle('is-active', i===index);
                });
            }

            slides.forEach((_, i)=>{
                const dot = document.createElement('button');
                dot.type = 'button';
                dot.className = 'slider__dot' + (i===0 ? ' is-active' : '');
                dot.addEventListener('click', ()=>{ index = i; update(); });
                dotsWrap.appendChild(dot);
            });

            function next(){ index = (index + 1) % slides.length; update(); }
            function prev(){ index = (index - 1 + slides.length) % slides.length; update(); }

            btnNext && btnNext.addEventListener('click', next);
            btnPrev && btnPrev.addEventListener('click', prev);

            let timer = setInterval(next, 5000);
            root.addEventListener('mouseenter', ()=> clearInterval(timer));
            root.addEventListener('mouseleave', ()=> timer = setInterval(next, 5000));
        })();
    </script>
}


